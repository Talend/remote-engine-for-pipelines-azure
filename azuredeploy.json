{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "customSubnetId": {
            "type": "string",
            "defaultValue": "newVnet",
            "metadata": {
                "description": "Provide here your subnet resource id to place Remote Engine. To create new VNet for you keep this field blank."
            }
        },
        "instanceSize": {
            "type": "string",
            "allowedValues": [
                "Standard_B2ms",
                "Standard_D2s_v3",
                "Standard_D2_v3"
            ],
            "defaultValue": "Standard_B2ms",
            "metadata": {
                "description": "Remote Engine Instance size"
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "centos",
            "metadata": {
                "description": "Admin account for RE"
            }
        },
        "publicKey": {
            "type": "string",
            "metadata": {
                "description": "Public key for admin user"
            }
        },
        "preAuthorizedKey": {
            "type": "string",
            "metadata": {
                "description": "Preauthorized key"
            }
        },
        "reServerLocation": {
            "type": "string",
            "allowedValues": [
                "eu",
                "ap",
                "us"
            ],
            "metadata": {
                "description": "Talend Cloud Datacenter of Remote Engine"
            }
        },
        "nicSecurityGroup": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Security group for Network Adapter"
            }
        },
        "utcTime": {
           "type": "string",
           "defaultValue": "[utcNow()]",
           "metadata": {
                "description": "Please, do not change this param"
            }
        }
    },
    "variables": {
        "nicName": "[concat('remote-engine-nic-', uniquestring(resourceGroup().id, deployment().name) )]",
        "pipName": "[concat('remote-engine-pip-', uniquestring(resourceGroup().id, deployment().name) )]",
        "remoteEngineVmName": "[concat('remote-engine-vm-', uniquestring(resourceGroup().id, deployment().name) )]",
        "remoteEngineComputerName": "[concat('re-', uniquestring(resourceGroup().id, deployment().name) )]",
        "osDiskName": "[concat('remote-engine-osdisk-', uniquestring(resourceGroup().id, deployment().name) )]",
        "vnetName": "[concat('remote-engine-vnet-',uniquestring(resourceGroup().id))]",
        "nsgName": "[concat('remote-engine-nsg-',uniquestring(resourceGroup().id))]",
        "vnetAddressPrefix": "10.0.0.0/16",
        "vnetSubnetName": "default",
        "vnetSubnetPrefix": "10.0.0.0/24",
        "createOrNotVnet": "[equals(parameters('customSubnetId'),'newVnet')]"
    },
    "resources": [
        {
            "name": "[variables('pipName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2018-08-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "PublicIPAddress"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "name": "[variables('nicName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-04-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('vnetSubnetName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
            ],
            "tags": {
                "displayName": "NetworkInterface"
            },
            "properties": {
                "networkSecurityGroup": {
                    "id": "[if(variables('createOrNotVnet'), resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName')), parameters('nicSecurityGroup')) ]"
                },
                "ipConfigurations": [
                    {
                        "name": "ipConfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]"
                            },
                            "subnet": {
                                "id": "[if(variables('createOrNotVnet'), resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('vnetSubnetName')), parameters('customSubnetId'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('remoteEngineVmName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            ],
            "tags": {
                "displayName": "Remote Engine VM"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('instanceSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('remoteEngineComputerName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('publicKey')]"
                                }
                            ]
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "offer": "CentOS",
                        "publisher": "OpenLogic",
                        "sku": "7.5",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[variables('osDiskName')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "osType": "Linux"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "name": "custom-script",
                    "type": "extensions",
                    "location": "[resourceGroup().location]",
                    "apiVersion": "2019-03-01",
                    "dependsOn": [
                        "[variables('remoteEngineVmName')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.0",
                        "autoUpgradeMinorVersion": false,
                        "protectedSettings": {
                            "fileUris": [ "https://re4pstoragedev.blob.core.windows.net/scripts/provision.sh" ],
                            "commandToExecute": "[concat('/var/lib/waagent/custom-script/download/0/provision.sh', ' ' , parameters('reServerLocation'), ' ', parameters('preAuthorizedKey'))]"
                        }
                    }
                }
            ]
        },
        {
            "apiVersion": "2019-04-01",
            "type": "Microsoft.Network/virtualNetworks",
            "condition": "[variables('createOrNotVnet')]",
            "name": "[variables('vnetName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnetAddressPrefix')]"
                    ]
                }
            },
            "resources": [
                {
                    "apiVersion": "2019-04-01",
                    "type": "subnets",
                    "condition": "[variables('createOrNotVnet')]",
                    "location": "[resourceGroup().location]",
                    "name": "[variables('vnetSubnetName')]",
                    "dependsOn": [
                        "[variables('vnetName')]"
                    ],
                    "properties": {
                        "addressPrefix": "[variables('vnetSubnetPrefix')]"
                    }
                }
            ]
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgName')]",
            "location": "[resourceGroup().location]",
            "properties": {
              "securityRules": [
                {
                  "name": "allow_ssh",
                  "properties": {
                    "description": "Allow SSH connection to RE, from any destiantion",
                    "protocol": "Tcp",
                    "sourcePortRange": "*",
                    "destinationPortRange": "22",
                    "sourceAddressPrefix": "*",
                    "destinationAddressPrefix": "*",
                    "access": "Allow",
                    "priority": 100,
                    "direction": "Inbound"
                  }
                }
              ]
            }
          }
    ],
    "outputs": {
        "output1": {
            "type": "string",
            "value": ""
        }
    }
}

